# Docker Compose for FieldDay Development
# Start all backend services with: docker-compose up -d

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgis/postgis:15-3.3
    container_name: fieldday-postgres
    environment:
      POSTGRES_DB: fieldday_dev
      POSTGRES_USER: fieldday
      POSTGRES_PASSWORD: fieldday_dev_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U fieldday']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fieldday-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: fieldday-redis
    command: redis-server --appendonly yes
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fieldday-network

  # TimescaleDB for Analytics
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: fieldday-timescale
    environment:
      POSTGRES_DB: fieldday_analytics
      POSTGRES_USER: fieldday
      POSTGRES_PASSWORD: fieldday_dev_password
    ports:
      - '5433:5432'
    volumes:
      - timescale_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U fieldday']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fieldday-network

  # Mailhog (Email testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: fieldday-mailhog
    ports:
      - '1025:1025' # SMTP server
      - '8025:8025' # Web UI
    networks:
      - fieldday-network

  # MinIO (S3-compatible object storage)
  minio:
    image: minio/minio:latest
    container_name: fieldday-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: fieldday
      MINIO_ROOT_PASSWORD: fieldday_dev_password
    ports:
      - '9000:9000' # API
      - '9001:9001' # Console
    volumes:
      - minio_data:/data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - fieldday-network

  # PgAdmin (Database UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fieldday-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@fieldday.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '5050:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - fieldday-network

  # RedisInsight (Redis UI)
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: fieldday-redis-insight
    ports:
      - '8001:8001'
    volumes:
      - redis_insight_data:/db
    networks:
      - fieldday-network

volumes:
  postgres_data:
  timescale_data:
  redis_data:
  minio_data:
  pgadmin_data:
  redis_insight_data:

networks:
  fieldday-network:
    driver: bridge
